
kubectl command
#sudo kubectl get node
#sudo kubectl get pod
#sudo kubectl cluster-info

create a pod using deployment
#sudo kubectl create deployment hello-minikube --image=k8s.gcr.io/echoserver:1.10
deployment.apps/hello-minikube created

To access the hello-minikube Deployment, expose it as a Service (8080)
#sudo kubectl expose deployment hello-minikube --type=NodePort --port=8080
service/hello-minikube exposed

#kubectl get pod
aho@aho:~$ sudo kubectl get pod
NAME                              READY   STATUS              RESTARTS   AGE
hello-minikube-797f975945-mk66p   0/1     ContainerCreating   0          2m55s
aho@aho:~$ sudo kubectl get pod
NAME                              READY   STATUS    RESTARTS   AGE
hello-minikube-797f975945-mk66p   1/1     Running   0          5m21s

get the server url
#minikube service hello-minikube --url
* http://10.62.81.27:30179

delete services
#kubectl delete services hello-minikube

Delete the hello-minikube Deployment:
#kubectl delete deployment hello-minikube

#minikube stop
#minikube start
#minikube delete

cpu usage diagram
#minikube addons list
#minikube addons enable heapster
#minikube addons open heapster --url

yaml for deployment - nginx
-----------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80
————————————————

Service for Ngnix
------------------
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30009
  externalIPs:
    - 公网IP
————————————————

#kubectl scale deployment nginx-deployment --replicas=2
